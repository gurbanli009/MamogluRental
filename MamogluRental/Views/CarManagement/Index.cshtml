<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Mamoglu Rent A Car</title>

    <!-- Bootstrap CSS (CDN) -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">

    <!-- Font Awesome CSS (CDN) -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer" />

    <style>
        /* --- Embedded CSS --- */
        body {
            background-color: #f8f9fa; /* Light background for the page */
        }

        .admin-container {
            max-width: 1240px; /* Adjusted for new column */
            margin: auto; /* Center container */
        }

        /* Status Indicators */
        .status-available {
            color: var(--bs-success); /* Bootstrap success color variable */
            font-weight: 500;
        }

        .status-rented {
            color: var(--bs-danger); /* Bootstrap danger color variable */
            font-weight: 500;
        }

        .status-maintenance {
            color: var(--bs-warning); /* Bootstrap warning color variable */
            font-weight: 500;
        }

        /* Table Styles */
        .admin-table th {
            white-space: nowrap; /* Prevent table headers from wrapping */
        }

        .admin-table .text-end {
            text-align: right; /* Align actions column to the right */
        }

        .admin-table .btn-sm {
            margin-left: 0.3rem; /* Spacing between action buttons */
            padding: 0.2rem 0.4rem; /* Smaller padding for small buttons */
            font-size: 0.8rem; /* Smaller font size for buttons */
        }

            .admin-table .btn-sm i {
                margin-right: 0.25rem; /* Space between icon and text in buttons */
            }

        .table caption {
            caption-side: top;
            color: #6c757d;
            font-size: 0.9em;
        }

        .table-car-image {
            max-width: 100px;
            max-height: 70px;
            object-fit: cover;
            border-radius: 0.25rem;
        }

        /* Card Header */
        .card-header h2 {
            font-size: 1.25rem; /* Adjusted heading size */
        }

        /* Modal Customization */
        .modal-dialog {
            max-width: 600px; /* Control the maximum width of the modal */
        }

        .modal-header {
            background-color: #f8f9fa; /* Light header for modal */
            border-bottom: 1px solid #dee2e6;
        }

        .modal-image-preview {
            display: block;
            max-width: 100%;
            max-height: 200px;
            object-fit: contain;
            margin-top: 10px;
            border: 1px solid #ced4da;
            border-radius: 0.25rem;
            padding: 0.25rem;
        }


        /* Styling for Bootstrap's validation feedback (visual only without JS submit logic) */
        .invalid-feedback {
            /* display: none; */ /* Bootstrap handles this */
            width: 100%;
            margin-top: 0.25rem;
            font-size: .875em;
            color: var(--bs-danger);
        }
    </style>
</head>
<body>

    <!-- Main Content Area -->
    <div class="container mt-4 admin-container">
        <div class="card shadow-sm">
            <div class="card-header bg-light d-flex justify-content-between align-items-center">
                <h2 class="mb-0 h4">Car Inventory</h2>
                <div>
                    <a href="@Url.Action("Index", "Home")" class="btn btn-secondary btn-sm me-2">
                        <!-- This is Razor syntax, assuming it's intended -->
                        <i class="fas fa-home me-1"></i> Back to Home
                    </a>
                    <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#carFormModal" id="addCarBtn">
                        <i class="fas fa-plus me-1"></i> Add New Car
                    </button>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-hover admin-table caption-top">
                        <caption>List of available cars</caption>
                        <thead class="table-light">
                            <tr>
                                <th class="text-center">Make</th>
                                <th class="text-center">Model</th>
                                <th class="text-center">Year</th>
                                <th class="text-center">Price/Day (₼)</th>
                                <th class="text-center">Doors</th>
                                <th class="text-center">Seats</th>
                                <th class="text-center">Transmission</th>
                                <th class="text-center">Min. Age</th>
                                <th class="text-center">Image</th>
                                <th class="text-center">Status</th>
                                <th class="text-end">Actions</th>
                            </tr>
                        </thead>
                        <tbody id="carTableBody">
                            <!-- Sample Static Rows (Image SRC will be a placeholder) -->
                            <tr data-car-id="1">
                                <td class="text-center">Mercedes</td>
                                <td class="text-center">E-Class</td>
                                <td class="text-center">2023</td>
                                <td class="text-center">200.00</td>
                                <td class="text-center">4</td>
                                <td class="text-center">5</td>
                                <td class="text-center">Automatic</td>
                                <td class="text-center">21</td>
                                <td class="text-center"><img src="~/images/hero_2.jpg" alt="Mercedes E-Class" class="table-car-image"></td>
                                <td class="text-center"><span class="status-available">Available</span></td>
                                <td class="text-end">
                                    <button class="btn btn-sm btn-warning btn-edit" data-bs-toggle="modal" data-bs-target="#carFormModal" title="Edit Car" onclick="prepareEdit(this)">
                                        <i class="fas fa-edit"></i><span class="d-none d-md-inline ms-1">Edit</span>
                                    </button>
                                    <button class="btn btn-sm btn-danger btn-delete" title="Delete Car" onclick="deleteCar(this)">
                                        <i class="fas fa-trash"></i><span class="d-none d-md-inline ms-1">Delete</span>
                                    </button>
                                </td>
                            </tr>
                            <tr data-car-id="2">
                                <td class="text-center">Audi</td>
                                <td class="text-center">RS7</td>
                                <td class="text-center">2022</td>
                                <td class="text-center">170.00</td>
                                <td class="text-center">4</td>
                                <td class="text-center">5</td>
                                <td class="text-center">Automatic</td>
                                <td class="text-center">21</td>
                                <td class="text-center"><img src="~/images/img_1.jpg" alt="Audi RS7" class="table-car-image"></td>
                                <td class="text-center"><span class="status-rented">Rented</span></td>
                                <td class="text-end">
                                    <button class="btn btn-sm btn-warning btn-edit" data-bs-toggle="modal" data-bs-target="#carFormModal" title="Edit Car" onclick="prepareEdit(this)">
                                        <i class="fas fa-edit"></i><span class="d-none d-md-inline ms-1">Edit</span>
                                    </button>
                                    <button class="btn btn-sm btn-danger btn-delete" title="Delete Car" onclick="deleteCar(this)">
                                        <i class="fas fa-trash"></i><span class="d-none d-md-inline ms-1">Delete</span>
                                    </button>
                                </td>
                            </tr>
                            <tr data-car-id="3">
                                <td class="text-center">Land Rover</td>
                                <td class="text-center">Range Rover</td>
                                <td class="text-center">2018</td>
                                <td class="text-center">150.00</td>
                                <td class="text-center">4</td>
                                <td class="text-center">8</td>
                                <td class="text-center">Automatic</td>
                                <td class="text-center">25</td>
                                <td class="text-center"><img src="~/images/hero_1.jpg" alt="Land Rover Range Rover" class="table-car-image"></td>
                                <td class="text-center"><span class="status-maintenance">Maintenance</span></td>
                                <td class="text-end">
                                    <button class="btn btn-sm btn-warning btn-edit" data-bs-toggle="modal" data-bs-target="#carFormModal" title="Edit Car" onclick="prepareEdit(this)">
                                        <i class="fas fa-edit"></i><span class="d-none d-md-inline ms-1">Edit</span>
                                    </button>
                                    <button class="btn btn-sm btn-danger btn-delete" title="Delete Car" onclick="deleteCar(this)">
                                        <i class="fas fa-trash"></i><span class="d-none d-md-inline ms-1">Delete</span>
                                    </button>
                                </td>
                            </tr>
                            <tr data-car-id="4">
                                <td class="text-center">BMW</td>
                                <td class="text-center">F80</td>
                                <td class="text-center">2023</td>
                                <td class="text-center">100.00</td>
                                <td class="text-center">2</td>
                                <td class="text-center">5</td>
                                <td class="text-center">Manual</td>
                                <td class="text-center">18</td>
                                <td class="text-center"><img src="~/images/img_2.jpg" alt="BMW F8" class="table-car-image"></td>
                                <td class="text-center"><span class="status-available">Available</span></td>
                                <td class="text-end">
                                    <button class="btn btn-sm btn-warning btn-edit" data-bs-toggle="modal" data-bs-target="#carFormModal" title="Edit Car" onclick="prepareEdit(this)">
                                        <i class="fas fa-edit"></i><span class="d-none d-md-inline ms-1">Edit</span>
                                    </button>
                                    <button class="btn btn-sm btn-danger btn-delete" title="Delete Car" onclick="deleteCar(this)">
                                        <i class="fas fa-trash"></i><span class="d-none d-md-inline ms-1">Delete</span>
                                    </button>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Add/Edit Car Modal Structure -->
    <div class="modal fade" id="carFormModal" tabindex="-1" aria-labelledby="carFormModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="carFormModalLabel">Car Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="carForm" onsubmit="return false;">
                        <input type="hidden" id="carId" value="">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="make" class="form-label">Make:</label>
                                    <input type="text" class="form-control" id="make" required placeholder="e.g., Toyota">
                                    <div class="invalid-feedback">Please enter the car make.</div>
                                </div>
                                <div class="mb-3">
                                    <label for="model" class="form-label">Model:</label>
                                    <input type="text" class="form-control" id="model" required placeholder="e.g., Camry">
                                    <div class="invalid-feedback">Please enter the car model.</div>
                                </div>
                                <div class="mb-3">
                                    <label for="year" class="form-label">Year:</label>
                                    <input type="number" class="form-control" id="year" min="1980" max="2025" required placeholder="e.g., 2023">
                                    <div class="invalid-feedback">Please enter a valid year (e.g., 1980-2025).</div>
                                </div>
                                <div class="mb-3">
                                    <label for="price" class="form-label">Price/Day (₼):</label>
                                    <input type="number" class="form-control" id="price" step="0.01" min="0" required placeholder="e.g., 55.50">
                                    <div class="invalid-feedback">Please enter a valid positive price.</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="doors" class="form-label">Doors:</label>
                                    <input type="number" class="form-control" id="doors" min="2" max="6" required placeholder="e.g., 4">
                                    <div class="invalid-feedback">Please enter the number of doors (2-6).</div>
                                </div>
                                <div class="mb-3">
                                    <label for="seats" class="form-label">Seats:</label>
                                    <input type="number" class="form-control" id="seats" min="2" max="9" required placeholder="e.g., 5">
                                    <div class="invalid-feedback">Please enter the number of seats (2-9).</div>
                                </div>
                                <div class="mb-3">
                                    <label for="transmission" class="form-label">Transmission:</label>
                                    <select class="form-select" id="transmission" required>
                                        <option value="" disabled selected>-- Select Transmission --</option>
                                        <option value="Automatic">Automatic</option>
                                        <option value="Manual">Manual</option>
                                    </select>
                                    <div class="invalid-feedback">Please select a transmission type.</div>
                                </div>
                                <div class="mb-3">
                                    <label for="minAge" class="form-label">Min. Age:</label>
                                    <input type="number" class="form-control" id="minAge" min="18" max="99" required placeholder="e.g., 21">
                                    <div class="invalid-feedback">Please enter the minimum age (18-99).</div>
                                </div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="carImage" class="form-label">Car Image:</label>
                            <input type="file" class="form-control" id="carImage" accept="image/*">
                            <img id="imagePreview" src="#" alt="Image Preview" class="modal-image-preview mt-2">
                            <div class="form-text">Optional. Select an image for the car (max 2MB). Recommended aspect ratio 4:3.</div>
                        </div>
                        <div class="mb-3">
                            <label for="status" class="form-label">Status:</label>
                            <select class="form-select" id="status" required>
                                <option value="" disabled selected>-- Select Status --</option>
                                <option value="Available">Available</option>
                                <option value="Rented">Rented</option>
                                <option value="Maintenance">Maintenance</option>
                            </select>
                            <div class="invalid-feedback">Please select a status.</div>
                        </div>
                        <div id="formErrorMessage" class="alert alert-danger mt-2" style="display: none;"></div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="saveCarButton" onclick="saveCar()">Save Car</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>

    <script>
        // --- DOM Element References ---
        const carForm = document.getElementById('carForm');
        const carIdInput = document.getElementById('carId');
        const makeInput = document.getElementById('make');
        const modelInput = document.getElementById('model');
        const yearInput = document.getElementById('year');
        const priceInput = document.getElementById('price');
        const doorsInput = document.getElementById('doors');
        const seatsInput = document.getElementById('seats');
        const transmissionInput = document.getElementById('transmission');
        const minAgeInput = document.getElementById('minAge');
        const statusInput = document.getElementById('status');
        const carImageInput = document.getElementById('carImage');
        const imagePreview = document.getElementById('imagePreview');
        const modalTitle = document.getElementById('carFormModalLabel');
        const saveCarButton = document.getElementById('saveCarButton');
        const formErrorMessageDiv = document.getElementById('formErrorMessage');
        const carFormModalElement = document.getElementById('carFormModal');
        const carTableBody = document.getElementById('carTableBody');
        const carFormModal = bootstrap.Modal.getOrCreateInstance(carFormModalElement);

        const PLACEHOLDER_IMAGE_URL = "data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22100%22%20height%3D%2270%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20100%2070%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_1%20text%20%7B%20fill%3A%23999%3Bfont-weight%3Anormal%3Bfont-family%3Avar(--bs-font-sans-serif)%2C%20monospace%3Bfont-size%3A10pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_1%22%3E%3Crect%20width%3D%22100%22%20height%3D%2270%22%20fill%3D%22%23eee%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2224.125%22%20y%3D%2239.4%22%3ENo Image%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E";

        // --- Helper Functions ---
        function showFormError(message) {
            formErrorMessageDiv.textContent = message;
            formErrorMessageDiv.style.display = 'block';
        }
        function hideFormError() {
            formErrorMessageDiv.style.display = 'none';
            formErrorMessageDiv.textContent = '';
            carForm.classList.remove('was-validated');
        }

        // --- Image Preview Handler ---
        carImageInput.addEventListener('change', function(event) {
            const file = event.target.files[0];
            if (file) {
                if (file.size > 2 * 1024 * 1024) { // 2MB size limit
                    showFormError('Image size should not exceed 2MB.');
                    carImageInput.value = ""; // Clear the input
                    // Optionally revert preview if you stored the "original" for edit mode
                    // For now, we let the previously set image (or placeholder) remain
                    return;
                }
                const reader = new FileReader();
                reader.onload = function(e) {
                    imagePreview.src = e.target.result;
                }
                reader.readAsDataURL(file);
                hideFormError(); // Clear general form error if image selection is now valid
            } else {
                // If no file is selected (e.g., user cancelled),
                // imagePreview.src will retain its current value (set by prepareAdd/prepareEdit)
            }
        });

        // --- Modal Form Preparation ---
        carFormModalElement.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            if (button && button.id === 'addCarBtn') {
                prepareAddForm();
            }
            // Note: prepareEdit is called directly by the edit button's onclick
        });

        function prepareAddForm() {
            carForm.reset();
            carIdInput.value = '';
            modalTitle.textContent = 'Add New Car';
            saveCarButton.textContent = 'Add Car';
            imagePreview.src = PLACEHOLDER_IMAGE_URL;
            carImageInput.value = ''; // Clear any selected file
            hideFormError();
            statusInput.selectedIndex = 0;
            transmissionInput.selectedIndex = 0;
        }

        function prepareEdit(buttonElement) {
            carForm.reset();
            hideFormError();
            modalTitle.textContent = 'Edit Car';
            saveCarButton.textContent = 'Update Car';

            const row = buttonElement.closest('tr');
            if (!row) {
                showFormError("Could not load data for editing.");
                return;
            }

            carIdInput.value = row.getAttribute('data-car-id');
            makeInput.value = row.cells[0].textContent;
            modelInput.value = row.cells[1].textContent;
            yearInput.value = row.cells[2].textContent;
            priceInput.value = parseFloat(row.cells[3].textContent).toFixed(2);
            doorsInput.value = row.cells[4].textContent;
            seatsInput.value = row.cells[5].textContent;
            transmissionInput.value = row.cells[6].textContent;
            minAgeInput.value = row.cells[7].textContent;

            const imgElement = row.cells[8].querySelector('img');
            imagePreview.src = imgElement ? imgElement.src : PLACEHOLDER_IMAGE_URL;
            carImageInput.value = ''; // Clear file input, user must re-select if they want to change

            const statusSpan = row.cells[9].querySelector('span');
            statusInput.value = statusSpan ? statusSpan.textContent : '';
        }

        // --- CRUD Actions ---
        function saveCar() {
            hideFormError();
            carForm.classList.add('was-validated');

            if (!carForm.checkValidity()) {
                showFormError('Please fill out all required fields correctly.');
                return;
            }
             // Additional check for image input if it had an error previously but form is otherwise valid
            if (carImageInput.files.length > 0 && carImageInput.files[0].size > 2 * 1024 * 1024) {
                showFormError('Image size should not exceed 2MB. Please select a smaller image or remove it.');
                carForm.classList.remove('was-validated'); // Prevent saving
                return;
            }


            const carData = {
                id: carIdInput.value || Date.now().toString(),
                make: makeInput.value.trim(),
                model: modelInput.value.trim(),
                year: yearInput.value,
                price: parseFloat(priceInput.value).toFixed(2),
                doors: doorsInput.value,
                seats: seatsInput.value,
                transmission: transmissionInput.value,
                minAge: minAgeInput.value,
                imageUrl: imagePreview.src, // This will be dataURL or placeholder
                status: statusInput.value
            };

            const existingRow = carTableBody.querySelector(`tr[data-car-id="${carData.id}"]`);

            if (existingRow) {
                // Update existing row
                existingRow.cells[0].textContent = carData.make;
                existingRow.cells[1].textContent = carData.model;
                existingRow.cells[2].textContent = carData.year;
                existingRow.cells[3].textContent = carData.price;
                existingRow.cells[4].textContent = carData.doors;
                existingRow.cells[5].textContent = carData.seats;
                existingRow.cells[6].textContent = carData.transmission;
                existingRow.cells[7].textContent = carData.minAge;
                existingRow.cells[8].innerHTML = `<img src="${carData.imageUrl}" alt="${carData.make} ${carData.model}" class="table-car-image">`;
                existingRow.cells[9].innerHTML = `<span class="status-${carData.status.toLowerCase()}">${carData.status}</span>`;
            } else {
                // Create new row
                const newRow = carTableBody.insertRow();
                newRow.setAttribute('data-car-id', carData.id);
                newRow.innerHTML = `
                    <td class="text-center">${carData.make}</td>
                    <td class="text-center">${carData.model}</td>
                    <td class="text-center">${carData.year}</td>
                    <td class="text-center">${carData.price}</td>
                    <td class="text-center">${carData.doors}</td>
                    <td class="text-center">${carData.seats}</td>
                    <td class="text-center">${carData.transmission}</td>
                    <td class="text-center">${carData.minAge}</td>
                    <td class="text-center"><img src="${carData.imageUrl}" alt="${carData.make} ${carData.model}" class="table-car-image"></td>
                    <td class="text-center"><span class="status-${carData.status.toLowerCase()}">${carData.status}</span></td>
                    <td class="text-end">
                        <button class="btn btn-sm btn-warning btn-edit"
                                data-bs-toggle="modal"
                                data-bs-target="#carFormModal"
                                title="Edit Car"
                                onclick="prepareEdit(this)">
                            <i class="fas fa-edit"></i><span class="d-none d-md-inline ms-1">Edit</span>
                        </button>
                        <button class="btn btn-sm btn-danger btn-delete"
                                title="Delete Car"
                                onclick="deleteCar(this)">
                            <i class="fas fa-trash"></i><span class="d-none d-md-inline ms-1">Delete</span>
                        </button>
                    </td>
                `;
                const noCarsRow = carTableBody.querySelector('td[colspan="11"]');
                if (noCarsRow) {
                    noCarsRow.parentElement.remove();
                }
            }
            carFormModal.hide();
        }

        function deleteCar(buttonElement) {
            const row = buttonElement.closest('tr');
            if (!row) return;

            const carMake = row.cells[0].textContent;
            const carModel = row.cells[1].textContent;

            if (confirm(`Are you sure you want to delete ${carMake} ${carModel}?`)) {
                row.remove();
                if (carTableBody.children.length === 0) {
                    const newRow = carTableBody.insertRow();
                    newRow.innerHTML = `
                        <tr>
                            <td colspan="11" class="text-center text-muted py-4">
                                No cars found in inventory.
                            </td>
                        </tr>
                    `;
                }
            }
        }

        carFormModalElement.addEventListener('hidden.bs.modal', function (event) {
            hideFormError();
            carForm.reset(); // Resets form fields
            carForm.classList.remove('was-validated');
            imagePreview.src = PLACEHOLDER_IMAGE_URL; // Reset preview
            carImageInput.value = ''; // Clear file input
            statusInput.selectedIndex = 0;
            transmissionInput.selectedIndex = 0;
        });
    </script>
</body>
</html>